Los archivos fuente iniciales vienen del plugin de jd-decompiler (incluir direccion de la web)

SOLUCION rápida: añadiendo como comando externo ya se puede utilizar desde el IntelliJ

Utilizando 

    $ grep -R native *

se ve que la única llamada a librerias nativas es

    src/jd/ide/eclipse/editors/JDSourceMapper.java:	protected native String decompile(String baseName, String qualifiedName);

Que es el punto de partida, para decompilar cualquier archivo class

- Los modelos de este proyecto son muy simples, Utilizando DefaultTreeModel se puede recargar un nodo y acceder
a una implementación mas limpia y standard
    Modificar el modelo del proyecto jtreetable para que lea zip (tar, etc)

- Utilizar los iconos de jd-gui (utilizar ranlib, ar, dump, objdump o similares para extraer los iconos)
    estan en el directorio resources

- Añadirle un panel con un RSyntaxArea (para poder ver el codigo resaltado) y navegar por él

- Filtrar los archivos para que las líneas del fuente coincidan con las lineas generadas
    Visto que añadir o quitar lineas funciona, implementar un algoritmo que junte lineas no importantes (variables, llaves, imports)
    y añada lineas en blanco

- Comprobar los tiempos de generación de codigo fuente para ver como implementar las busquedas (podría ser en memoria o en un temporal...)
    Si hay que buscar el uso de una clase, hay que hacerlo también dentro de los compilados (haría falta la estructura psi del intellij)
    NOTA: La busqueda es la parte más importante del proyecto.

- añadir la descompresion de apk (android) con el proyecto ded que usa jadmin y esta hecho en java
    Hacer que el codigo quede directamente en un zip o jar y preguntar si se quieren conservar los archivos .jadmin

- Añadir la deofuscación (con el proyecto yguard modificado) y permitir un nombrado forzado de algunas de las clases cuando se sabe lo que son
    Intentar algún tipo de IA sobre que es cada clase (si extiende un Model será un Model si extiende un JTable será una tabla, si extiende un listener será un listener.


